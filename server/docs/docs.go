// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/getFriendRequests": {
            "post": {
                "description": "Restituisce tutti le richieste di amicizia dell'utente loggato",
                "produces": [
                    "application/json"
                ],
                "summary": "Ricerca richieste di amicizia utente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Indice dell'utente loggato",
                        "name": "index",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getFriends": {
            "post": {
                "description": "Restituisce tutti gli amici dell'utente loggato",
                "produces": [
                    "application/json"
                ],
                "summary": "Ricerca amici utente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Indice dell'utente loggato",
                        "name": "index",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/searchUsers": {
            "get": {
                "description": "Cerca fino a 100 utenti con username che inizia con la stringa passata come parametro",
                "produces": [
                    "application/json"
                ],
                "summary": "Ricerca utenti",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Caratteri con cui inizia l'username",
                        "name": "username",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/socket": {
            "get": {
                "description": "Permette di connettersi al socket realizzato con libreria Gorilla Websocket",
                "produces": [
                    "application/json"
                ],
                "summary": "Connessione al socket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Indice dell'utente",
                        "name": "index",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.hermeschat.it:8090",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "HermesChat API",
	Description:      "Server API e Websocket per il progetto HermesChat. Il server Ã¨ stato sviluppato in Go con il framework Gin e utilizza MongoDB come database.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
